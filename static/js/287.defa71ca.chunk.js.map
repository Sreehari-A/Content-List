{"version":3,"file":"static/js/287.defa71ca.chunk.js","mappings":"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","sources":["utils/checkStore.js","utils/reducerInjectors.js","utils/injectReducer.js","utils/constants.js","utils/sagaInjectors.js","utils/injectSaga.js","ContentListing/constants.js","ContentListing/reducer.js","api/APIService.js","ContentListing/saga.js","ContentListing/actions.js","ContentListing/selectors.js","utils/stylize.js","utils/withForwardRef.js","ContentListing/styles.js","ContentListing/navBar.js","components/Img/index.js","ContentListing/contentItem.js","ContentListing/index.js","api|lazy|/^/.*/.json$/|groupOptions: {}|namespace object","images/Slices|lazy|/^/.*$/|groupOptions: {}|namespace object"],"sourcesContent":["import { conformsTo, isFunction, isObject } from 'lodash';\r\nimport invariant from 'invariant';\r\n\r\n/**\r\n * Validate the shape of redux store\r\n */\r\nexport default function checkStore(store) {\r\n  const shape = {\r\n    dispatch: isFunction,\r\n    subscribe: isFunction,\r\n    getState: isFunction,\r\n    replaceReducer: isFunction,\r\n    runSaga: isFunction,\r\n    injectedReducers: isObject,\r\n    injectedSagas: isObject,\r\n  };\r\n  invariant(\r\n    conformsTo(store, shape),\r\n    '(app/utils...) injectors: Expected a valid redux store',\r\n  );\r\n}\r\n","import invariant from 'invariant';\r\nimport { isEmpty, isFunction, isString } from 'lodash';\r\n\r\nimport checkStore from './checkStore';\r\nimport createReducer from '../reducers';\r\n\r\nexport function injectReducerFactory(store, isValid) {\r\n  return function injectReducer(key, reducer) {\r\n    if (!isValid) checkStore(store);\r\n\r\n    invariant(\r\n      isString(key) && !isEmpty(key) && isFunction(reducer),\r\n      '(app/utils...) injectReducer: Expected `reducer` to be a reducer function',\r\n    );\r\n\r\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\r\n    if (\r\n      Reflect.has(store.injectedReducers, key) &&\r\n      store.injectedReducers[key] === reducer\r\n    )\r\n      return;\r\n\r\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\r\n    store.replaceReducer(createReducer(store.injectedReducers));\r\n  };\r\n}\r\n\r\nexport default function getInjectors(store) {\r\n  checkStore(store);\r\n\r\n  return {\r\n    injectReducer: injectReducerFactory(store, true),\r\n  };\r\n}\r\n","import React from 'react';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport { ReactReduxContext } from 'react-redux';\r\n\r\nimport getInjectors from './reducerInjectors';\r\n\r\n/**\r\n * Dynamically injects a reducer\r\n *\r\n * @param {string} key A key of the reducer\r\n * @param {function} reducer A reducer that will be injected\r\n *\r\n */\r\nexport default ({ key, reducer }) => WrappedComponent => {\r\n  class ReducerInjector extends React.Component {\r\n    static WrappedComponent = WrappedComponent;\r\n\r\n    static contextType = ReactReduxContext;\r\n\r\n    static displayName = `withReducer(${WrappedComponent.displayName ||\r\n      WrappedComponent.name ||\r\n      'Component'})`;\r\n\r\n    constructor(props, context) {\r\n      super(props, context);\r\n\r\n      getInjectors(context.store).injectReducer(key, reducer);\r\n    }\r\n\r\n    render() {\r\n      return <WrappedComponent {...this.props} />;\r\n    }\r\n  }\r\n\r\n  return hoistNonReactStatics(ReducerInjector, WrappedComponent);\r\n};\r\n\r\nconst useInjectReducer = ({ key, reducer }) => {\r\n  const context = React.useContext(ReactReduxContext);\r\n  React.useEffect(() => {\r\n    getInjectors(context.store).injectReducer(key, reducer);\r\n  }, []);\r\n};\r\n\r\nexport { useInjectReducer };\r\n","export const RESTART_ON_REMOUNT = '@@saga-injector/restart-on-remount';\r\nexport const DAEMON = '@@saga-injector/daemon';\r\nexport const ONCE_TILL_UNMOUNT = '@@saga-injector/once-till-unmount';\r\n","import invariant from 'invariant';\r\nimport { isEmpty, isFunction, isString, conformsTo } from 'lodash';\r\n\r\nimport checkStore from './checkStore';\r\nimport { DAEMON, ONCE_TILL_UNMOUNT, RESTART_ON_REMOUNT } from './constants';\r\n\r\nconst allowedModes = [RESTART_ON_REMOUNT, DAEMON, ONCE_TILL_UNMOUNT];\r\n\r\nconst checkKey = key =>\r\n  invariant(\r\n    isString(key) && !isEmpty(key),\r\n    '(app/utils...) injectSaga: Expected `key` to be a non empty string',\r\n  );\r\n\r\nconst checkDescriptor = descriptor => {\r\n  const shape = {\r\n    saga: isFunction,\r\n    mode: mode => isString(mode) && allowedModes.includes(mode),\r\n  };\r\n  invariant(\r\n    conformsTo(descriptor, shape),\r\n    '(app/utils...) injectSaga: Expected a valid saga descriptor',\r\n  );\r\n};\r\n\r\nexport function injectSagaFactory(store, isValid) {\r\n  return function injectSaga(key, descriptor = {}, args) {\r\n    if (!isValid) checkStore(store);\r\n\r\n    const newDescriptor = {\r\n      ...descriptor,\r\n      mode: descriptor.mode || DAEMON,\r\n    };\r\n    const { saga, mode } = newDescriptor;\r\n\r\n    checkKey(key);\r\n    checkDescriptor(newDescriptor);\r\n\r\n    let hasSaga = Reflect.has(store.injectedSagas, key);\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      const oldDescriptor = store.injectedSagas[key];\r\n      // enable hot reloading of daemon and once-till-unmount sagas\r\n      if (hasSaga && oldDescriptor.saga !== saga) {\r\n        oldDescriptor.task.cancel();\r\n        hasSaga = false;\r\n      }\r\n    }\r\n\r\n    if (\r\n      !hasSaga ||\r\n      (hasSaga && mode !== DAEMON && mode !== ONCE_TILL_UNMOUNT)\r\n    ) {\r\n      /* eslint-disable no-param-reassign */\r\n      store.injectedSagas[key] = {\r\n        ...newDescriptor,\r\n        task: store.runSaga(saga, args),\r\n      };\r\n      /* eslint-enable no-param-reassign */\r\n    }\r\n  };\r\n}\r\n\r\nexport function ejectSagaFactory(store, isValid) {\r\n  return function ejectSaga(key) {\r\n    if (!isValid) checkStore(store);\r\n\r\n    checkKey(key);\r\n\r\n    if (Reflect.has(store.injectedSagas, key)) {\r\n      const descriptor = store.injectedSagas[key];\r\n      if (descriptor.mode && descriptor.mode !== DAEMON) {\r\n        descriptor.task.cancel();\r\n        // Clean up in production; in development we need `descriptor.saga` for hot reloading\r\n        if (process.env.NODE_ENV === 'production') {\r\n          // Need some value to be able to detect `ONCE_TILL_UNMOUNT` sagas in `injectSaga`\r\n          store.injectedSagas[key] = 'done'; // eslint-disable-line no-param-reassign\r\n        }\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport default function getInjectors(store) {\r\n  checkStore(store);\r\n\r\n  return {\r\n    injectSaga: injectSagaFactory(store, true),\r\n    ejectSaga: ejectSagaFactory(store, true),\r\n  };\r\n}\r\n","import React from 'react';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport { ReactReduxContext } from 'react-redux';\r\n\r\nimport getInjectors from './sagaInjectors';\r\n\r\n/**\r\n * Dynamically injects a saga, passes component's props as saga arguments\r\n *\r\n * @param {string} key A key of the saga\r\n * @param {function} saga A root saga that will be injected\r\n * @param {string} [mode] By default (constants.DAEMON) the saga will be started\r\n * on component mount and never canceled or started again. Another two options:\r\n *   - constants.RESTART_ON_REMOUNT — the saga will be started on component mount and\r\n *   cancelled with `task.cancel()` on component unmount for improved performance,\r\n *   - constants.ONCE_TILL_UNMOUNT — behaves like 'RESTART_ON_REMOUNT' but never runs it again.\r\n *\r\n */\r\nexport default ({ key, saga, mode }) => WrappedComponent => {\r\n  class InjectSaga extends React.Component {\r\n    static WrappedComponent = WrappedComponent;\r\n\r\n    static contextType = ReactReduxContext;\r\n\r\n    static displayName = `withSaga(${WrappedComponent.displayName ||\r\n      WrappedComponent.name ||\r\n      'Component'})`;\r\n\r\n    constructor(props, context) {\r\n      super(props, context);\r\n\r\n      this.injectors = getInjectors(context.store);\r\n\r\n      this.injectors.injectSaga(key, { saga, mode }, this.props);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.injectors.ejectSaga(key);\r\n    }\r\n\r\n    render() {\r\n      return <WrappedComponent {...this.props} />;\r\n    }\r\n  }\r\n\r\n  return hoistNonReactStatics(InjectSaga, WrappedComponent);\r\n};\r\n\r\nconst useInjectSaga = ({ key, saga, mode }) => {\r\n  const context = React.useContext(ReactReduxContext);\r\n  React.useEffect(() => {\r\n    const injectors = getInjectors(context.store);\r\n    injectors.injectSaga(key, { saga, mode });\r\n\r\n    return () => {\r\n      injectors.ejectSaga(key);\r\n    };\r\n  }, []);\r\n};\r\n\r\nexport { useInjectSaga };\r\n","/*\r\n * HomeConstants\r\n */\r\nconst ActionTypes = {\r\n  SET_CONTENTS: 'ContentListing/setContents',\r\n  LOAD_CONTENT: 'ContentListing/loadContents',\r\n};\r\nexport default ActionTypes;\r\n","/*\r\n * ContentListReducer\r\n *\r\n * The reducer takes care of our data. Using actions, we can\r\n * update our application state. To add a new action,\r\n * add it to the switch statement in the reducer function\r\n *\r\n */\r\n\r\nimport produce from 'immer';\r\nimport ActionTypes from './constants';\r\n\r\n// The initial state of the App\r\nexport const initialState = {\r\n  contents: {},\r\n};\r\n\r\n/* eslint-disable default-case, no-param-reassign */\r\nconst homeReducer = (state = initialState, action) =>\r\n  produce(state, draft => {\r\n    switch (action.type) {\r\n      case ActionTypes.SET_CONTENTS:\r\n        draft.contents[action.payload.pageNum] = action.payload.listData;\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default homeReducer;\r\n","const MockAPIService = {\r\n  fetchContentListMock: pageNo => {\r\n    let fileName = '';\r\n    switch (pageNo) {\r\n      case 1:\r\n        fileName = 'CONTENTLISTINGPAGE-PAGE1';\r\n        break;\r\n      case 2:\r\n        fileName = 'CONTENTLISTINGPAGE-PAGE2';\r\n        break;\r\n      case 3:\r\n        fileName = 'CONTENTLISTINGPAGE-PAGE3';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    if (fileName) {\r\n      return import(`./${fileName}.json`).then(response => response.page);\r\n    }\r\n    return null;\r\n  },\r\n};\r\nexport default MockAPIService;\r\n","/**\r\n * Gets the repositories of the user from Github\r\n */\r\n\r\nimport { call, put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport MockAPIService from '../api/APIService';\r\nimport { setContents } from './actions';\r\nimport ActionTypes from './constants';\r\n\r\nexport function* getContents(action) {\r\n  try {\r\n    const pageNum = action.payload;\r\n    const contents = yield call(() =>\r\n      MockAPIService.fetchContentListMock(pageNum),\r\n    );\r\n    if (contents) {\r\n      const { 'content-items': { content: listData } = {}, ...meta } =\r\n        contents || {};\r\n      yield put(setContents({ listData, pageNum, meta }));\r\n    }\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n}\r\n\r\n/**\r\n * Root saga manages watcher lifecycle\r\n */\r\nexport default function* loadContent() {\r\n  // Watches for LOAD_REPOS actions and calls getRepos when one comes in.\r\n  // By using `takeLatest` only the result of the latest API call is applied.\r\n  // It returns task descriptor (just like fork) so we can continue execution\r\n  // It will be cancelled automatically on component unmount\r\n  yield takeLatest(ActionTypes.LOAD_CONTENT, getContents);\r\n}\r\n","/*\r\n * ContentList -  Actions\r\n */\r\n\r\nimport ActionTypes from './constants';\r\n\r\n/**\r\n * load the contents of the page\r\n *\r\n * @param  {object} payload object containing get params\r\n *\r\n * @return {object} An action object with a type of LOAD_CONTENT\r\n */\r\nexport function loadContents(payload) {\r\n  return {\r\n    type: ActionTypes.LOAD_CONTENT,\r\n    payload,\r\n  };\r\n}\r\n/**\r\n * sets the contents of the page to redux state\r\n *\r\n * @param  {object} payload content data array with its metadata\r\n *\r\n * @return {object} An action object with a type of SET_CONTENTS\r\n */\r\nexport function setContents(payload) {\r\n  return {\r\n    type: ActionTypes.SET_CONTENTS,\r\n    payload,\r\n  };\r\n}\r\n","/**\r\n * Homepage selectors\r\n */\r\n\r\nimport { createSelector } from 'reselect';\r\nimport { initialState } from './reducer';\r\n\r\nconst selectContentList = state => state.contentList || initialState;\r\n\r\nconst selectContents = () =>\r\n  createSelector(\r\n    selectContentList,\r\n    contentList => contentList.contents,\r\n  );\r\n\r\nexport { selectContentList, selectContents };\r\n","import { withStyles } from '@material-ui/core/styles';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport withForwardRef from './withForwardRef';\r\n\r\nexport default function stylize(component, style) {\r\n  const Styled = withStyles(style)(component);\r\n  Styled.displayName = component.displayName || component.name;\r\n  hoistNonReactStatics(Styled, component);\r\n  return withForwardRef(Styled);\r\n}\r\n","import React from 'react';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\n\r\nexport default function withForwardRef(Component) {\r\n  const forwarded = React.forwardRef((props, ref) => (\r\n    <Component innerRef={ref} {...props} />\r\n  ));\r\n  return hoistNonReactStatics(forwarded, Component);\r\n}\r\n","import NavBar from '../images/Slices/nav_bar.png';\r\nimport BackButton from '../images/Slices/Back.png';\r\nimport Search from '../images/Slices/search.png';\r\nexport default function styles() {\r\n  return {\r\n    listWrapper: {\r\n      padding: '15px',\r\n      display: 'grid',\r\n      gridTemplateColumns: 'repeat(3, 1fr)',\r\n      backgroundColor: '#000000',\r\n    },\r\n    listItem: {\r\n      margin: '36px 15px',\r\n    },\r\n    imageWrapper: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      '& img': {\r\n        width: '100%',\r\n      },\r\n    },\r\n    contentTitle: {\r\n      margin: '24px 0 18px 0',\r\n      color: '#ffffff',\r\n    },\r\n    navBar: {\r\n      background: `url(${NavBar})`,\r\n      height: '40px',\r\n      padding: '0 15px',\r\n    },\r\n    backButton: {\r\n      background: `url(${BackButton})`,\r\n      left: 0,\r\n    },\r\n    searchButton: {\r\n      background: `url(${Search})`,\r\n      right: 0,\r\n    },\r\n    navButton: {\r\n      position: 'absolute',\r\n      height: '20px',\r\n      width: '20px',\r\n      backgroundSize: 'contain',\r\n      backgroundRepeat: 'no-repeat',\r\n      border: 0,\r\n      '& img': {\r\n        height: '100%',\r\n      },\r\n    },\r\n    navBarItems: {\r\n      position: 'relative',\r\n      height: '100%',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n    },\r\n    navBarSearchInput: {\r\n      position: 'relative',\r\n      width: '70%',\r\n      left: '40px',\r\n    },\r\n  };\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport stylize from '../utils/stylize';\r\nimport styles from './styles';\r\n\r\nfunction NavBar({\r\n  resetSearchResults,\r\n  setSearchText,\r\n  searchText = '',\r\n  classes,\r\n}) {\r\n  const [showInput, setShowInput] = useState(false);\r\n  const inputElement = useRef();\r\n  const showSearchInput = () => {\r\n    setShowInput(true);\r\n    inputElement.current.focus();\r\n  };\r\n  useEffect(() => {\r\n    if (showInput) {\r\n      inputElement.current.focus();\r\n    }\r\n  }, [showInput]);\r\n  const moveBack = () => {\r\n    setShowInput(false);\r\n    resetSearchResults();\r\n  };\r\n  const onChangeInput = event => setSearchText(event.target.value);\r\n  return (\r\n    <div className={classes.navBar}>\r\n      <div className={classes.navBarItems}>\r\n        <button\r\n          type=\"button\"\r\n          className={`${classes.backButton} ${classes.navButton} `}\r\n          onClick={moveBack}\r\n        />\r\n        {showInput && (\r\n          <input\r\n            ref={inputElement}\r\n            className={classes.navBarSearchInput}\r\n            value={searchText}\r\n            onChange={onChangeInput}\r\n          />\r\n        )}\r\n        <button\r\n          type=\"button\"\r\n          className={`${classes.searchButton} ${classes.navButton} `}\r\n          onClick={showSearchInput}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nNavBar.propTypes = {\r\n  classes: PropTypes.object,\r\n  resetSearchResults: PropTypes.func,\r\n  setSearchText: PropTypes.func,\r\n  searchText: PropTypes.string,\r\n};\r\nexport default stylize(NavBar, styles);\r\n","/**\r\n *\r\n * Img.js\r\n *\r\n * Renders an image, enforcing the usage of the alt=\"\" tag\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Img(props) {\r\n  return <img className={props.className} src={props.src} alt={props.alt} loading=\"lazy\" />;\r\n}\r\n\r\n// We require the use of src and alt, only enforced by react in dev mode\r\nImg.propTypes = {\r\n  src: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Img;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Image from '../components/Img';\r\nimport AltImage from '../images/Slices/placeholder_for_missing_posters.png';\r\nimport styles from './styles';\r\nimport stylize from '../utils/stylize';\r\n\r\nfunction ContentItem({ content, classes }) {\r\n  const { 'poster-image': posterImage, name } = content;\r\n  useEffect(() => {\r\n    import(`../images/Slices/${posterImage}`).then(response =>\r\n      setImageSrc(response.default),\r\n    );\r\n  }, [posterImage]);\r\n  const [imageSrc, setImageSrc] = useState(AltImage);\r\n  return (\r\n    <div className={classes.listItem}>\r\n      <div className={classes.imageWrapper}>\r\n        <Image src={imageSrc} alt={AltImage} />\r\n      </div>\r\n      <div className={classes.contentTitle}>{name}</div>\r\n    </div>\r\n  );\r\n}\r\nContentItem.propTypes = {\r\n  content: PropTypes.object,\r\n  classes: PropTypes.object,\r\n};\r\nexport default stylize(ContentItem, styles);\r\n","/*\r\n * HomePage\r\n *\r\n * This is the first thing users see of our App, at the '/' route\r\n */\r\n\r\nimport React, { useState, useEffect, memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { Helmet } from 'react-helmet';\r\n// import { FormattedMessage } from 'react-intl';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { useInjectReducer } from '../utils/injectReducer';\r\nimport { useInjectSaga } from '../utils/injectSaga';\r\nimport reducer from './reducer';\r\nimport saga from './saga';\r\nimport { loadContents } from './actions';\r\nimport { selectContents } from './selectors';\r\nimport NavBar from './navBar';\r\nimport ContentItem from './contentItem';\r\nimport stylize from '../utils/stylize';\r\nimport styles from './styles';\r\n\r\nconst key = 'contentList';\r\n\r\nfunction ContentList({ content, fetchContent, classes }) {\r\n  useInjectReducer({ key, reducer });\r\n  useInjectSaga({ key, saga });\r\n  const [pageNum, setPageNum] = useState(1);\r\n  const [listData, setListData] = useState([]);\r\n  const [searchText, setSearchText] = useState('');\r\n  useEffect(() => {\r\n    const updatedList = [];\r\n    Object.keys(content).forEach(pageNo => {\r\n      updatedList.push(...content[pageNo]);\r\n    });\r\n    const filteredList = updatedList.filter(item =>\r\n      item.name.toLowerCase().includes(searchText.toLowerCase()),\r\n    );\r\n    setListData(filteredList);\r\n  }, [content, searchText]);\r\n  useEffect(() => {\r\n    fetchContent(pageNum);\r\n  }, [fetchContent, pageNum]);\r\n  // const { [pageNum]: { listData: listItems = [] } = {} } = contents;\r\n  const fetchData = () => {\r\n    setPageNum(pageNum + 1);\r\n  };\r\n  const resetSearchResults = () => setSearchText('');\r\n  return (\r\n    <div>\r\n      <NavBar\r\n        searchText={searchText}\r\n        resetSearchResults={resetSearchResults}\r\n        setSearchText={setSearchText}\r\n      />\r\n      <InfiniteScroll\r\n        dataLength={listData.length}\r\n        className={classes.listWrapper}\r\n        next={fetchData}\r\n        hasMore\r\n        loader={<h4>Loading...</h4>}\r\n        endMessage={\r\n          <p style={{ textAlign: 'center' }}>\r\n            <b>Yay! You have seen it all</b>\r\n          </p>\r\n        }\r\n      >\r\n        {listData.map(item => (\r\n          <ContentItem content={item} />\r\n        ))}\r\n      </InfiniteScroll>\r\n    </div>\r\n  );\r\n}\r\n\r\nContentList.propTypes = {\r\n  content: PropTypes.array,\r\n  fetchContent: PropTypes.func,\r\n  classes: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  content: selectContents(),\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fetchContent: payload => dispatch(loadContents(payload)),\r\n  };\r\n}\r\n\r\nconst withConnect = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n);\r\n\r\nexport default stylize(\r\n  compose(\r\n    withConnect,\r\n    memo,\r\n  )(ContentList),\r\n  styles,\r\n);\r\n","var map = {\n\t\"./CONTENTLISTINGPAGE-PAGE1.json\": [\n\t\t9106,\n\t\t106\n\t],\n\t\"./CONTENTLISTINGPAGE-PAGE2.json\": [\n\t\t964,\n\t\t964\n\t],\n\t\"./CONTENTLISTINGPAGE-PAGE3.json\": [\n\t\t6685,\n\t\t685\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3 | 16);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 7806;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./Back.png\": [\n\t\t4310\n\t],\n\t\"./nav_bar.png\": [\n\t\t6313\n\t],\n\t\"./placeholder_for_missing_posters.png\": [\n\t\t1803\n\t],\n\t\"./poster1.jpg\": [\n\t\t3867,\n\t\t867\n\t],\n\t\"./poster2.jpg\": [\n\t\t4317,\n\t\t317\n\t],\n\t\"./poster3.jpg\": [\n\t\t5851,\n\t\t851\n\t],\n\t\"./poster4.jpg\": [\n\t\t8141,\n\t\t141\n\t],\n\t\"./poster5.jpg\": [\n\t\t7086,\n\t\t86\n\t],\n\t\"./poster6.jpg\": [\n\t\t2619,\n\t\t619\n\t],\n\t\"./poster7.jpg\": [\n\t\t9164,\n\t\t164\n\t],\n\t\"./poster8.jpg\": [\n\t\t2407,\n\t\t407\n\t],\n\t\"./poster9.jpg\": [\n\t\t6002,\n\t\t2\n\t],\n\t\"./search.png\": [\n\t\t8115\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 1 | 16);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 9978;\nmodule.exports = webpackAsyncContext;"],"names":["checkStore","store","shape","dispatch","isFunction","subscribe","getState","replaceReducer","runSaga","injectedReducers","isObject","injectedSagas","invariant","conformsTo","injectReducerFactory","isValid","key","reducer","isString","isEmpty","Reflect","has","createReducer","useInjectReducer","context","React","ReactReduxContext","injectReducer","DAEMON","ONCE_TILL_UNMOUNT","allowedModes","checkKey","checkDescriptor","descriptor","saga","mode","includes","injectSagaFactory","args","newDescriptor","hasSaga","task","ejectSagaFactory","cancel","useInjectSaga","injectors","injectSaga","ejectSaga","SET_CONTENTS","LOAD_CONTENT","initialState","contents","state","action","produce","draft","type","ActionTypes","payload","pageNum","listData","fetchContentListMock","pageNo","fileName","then","response","page","getContents","loadContent","call","MockAPIService","content","meta","put","takeLatest","selectContentList","contentList","stylize","component","style","Styled","withStyles","displayName","name","hoistNonReactStatics","Component","forwarded","props","ref","innerRef","withForwardRef","styles","listWrapper","padding","display","gridTemplateColumns","backgroundColor","listItem","margin","imageWrapper","justifyContent","width","contentTitle","color","navBar","background","NavBar","height","backButton","BackButton","left","searchButton","Search","right","navButton","position","backgroundSize","backgroundRepeat","border","navBarItems","alignItems","navBarSearchInput","resetSearchResults","setSearchText","searchText","classes","useState","showInput","setShowInput","inputElement","useRef","useEffect","current","focus","className","onClick","value","onChange","event","target","src","alt","loading","posterImage","setImageSrc","default","AltImage","imageSrc","mapStateToProps","createStructuredSelector","createSelector","withConnect","connect","fetchContent","loadContents","compose","memo","setPageNum","setListData","updatedList","Object","keys","forEach","push","filteredList","filter","item","toLowerCase","dataLength","length","next","hasMore","loader","endMessage","textAlign","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","e","Error","code","ids","id","t","module","exports","all","slice"],"sourceRoot":""}