{"version":3,"file":"static/js/287.1db37790.chunk.js","mappings":"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","sources":["utils/checkStore.js","utils/reducerInjectors.js","utils/injectReducer.js","utils/constants.js","utils/sagaInjectors.js","utils/injectSaga.js","ContentListing/constants.js","ContentListing/reducer.js","api/APIService.js","ContentListing/saga.js","ContentListing/actions.js","ContentListing/selectors.js","utils/stylize.js","utils/withForwardRef.js","ContentListing/styles.js","ContentListing/navBar.js","components/Img/index.js","ContentListing/contentItem.js","ContentListing/index.js","api|lazy|/^/.*/.json$/|groupOptions: {}|namespace object","images/Slices|lazy|/^/.*$/|groupOptions: {}|namespace object"],"sourcesContent":["import { conformsTo, isFunction, isObject } from 'lodash';\nimport invariant from 'invariant';\n\n/**\n * Validate the shape of redux store\n */\nexport default function checkStore(store) {\n  const shape = {\n    dispatch: isFunction,\n    subscribe: isFunction,\n    getState: isFunction,\n    replaceReducer: isFunction,\n    runSaga: isFunction,\n    injectedReducers: isObject,\n    injectedSagas: isObject,\n  };\n  invariant(\n    conformsTo(store, shape),\n    '(app/utils...) injectors: Expected a valid redux store',\n  );\n}\n","import invariant from 'invariant';\nimport { isEmpty, isFunction, isString } from 'lodash';\n\nimport checkStore from './checkStore';\nimport createReducer from '../reducers';\n\nexport function injectReducerFactory(store, isValid) {\n  return function injectReducer(key, reducer) {\n    if (!isValid) checkStore(store);\n\n    invariant(\n      isString(key) && !isEmpty(key) && isFunction(reducer),\n      '(app/utils...) injectReducer: Expected `reducer` to be a reducer function',\n    );\n\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\n    if (\n      Reflect.has(store.injectedReducers, key) &&\n      store.injectedReducers[key] === reducer\n    )\n      return;\n\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\n    store.replaceReducer(createReducer(store.injectedReducers));\n  };\n}\n\nexport default function getInjectors(store) {\n  checkStore(store);\n\n  return {\n    injectReducer: injectReducerFactory(store, true),\n  };\n}\n","import React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { ReactReduxContext } from 'react-redux';\n\nimport getInjectors from './reducerInjectors';\n\n/**\n * Dynamically injects a reducer\n *\n * @param {string} key A key of the reducer\n * @param {function} reducer A reducer that will be injected\n *\n */\nexport default ({ key, reducer }) => WrappedComponent => {\n  class ReducerInjector extends React.Component {\n    static WrappedComponent = WrappedComponent;\n\n    static contextType = ReactReduxContext;\n\n    static displayName = `withReducer(${WrappedComponent.displayName ||\n      WrappedComponent.name ||\n      'Component'})`;\n\n    constructor(props, context) {\n      super(props, context);\n\n      getInjectors(context.store).injectReducer(key, reducer);\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  return hoistNonReactStatics(ReducerInjector, WrappedComponent);\n};\n\nconst useInjectReducer = ({ key, reducer }) => {\n  const context = React.useContext(ReactReduxContext);\n  React.useEffect(() => {\n    getInjectors(context.store).injectReducer(key, reducer);\n  }, []);\n};\n\nexport { useInjectReducer };\n","export const RESTART_ON_REMOUNT = '@@saga-injector/restart-on-remount';\nexport const DAEMON = '@@saga-injector/daemon';\nexport const ONCE_TILL_UNMOUNT = '@@saga-injector/once-till-unmount';\n","import invariant from 'invariant';\nimport { isEmpty, isFunction, isString, conformsTo } from 'lodash';\n\nimport checkStore from './checkStore';\nimport { DAEMON, ONCE_TILL_UNMOUNT, RESTART_ON_REMOUNT } from './constants';\n\nconst allowedModes = [RESTART_ON_REMOUNT, DAEMON, ONCE_TILL_UNMOUNT];\n\nconst checkKey = key =>\n  invariant(\n    isString(key) && !isEmpty(key),\n    '(app/utils...) injectSaga: Expected `key` to be a non empty string',\n  );\n\nconst checkDescriptor = descriptor => {\n  const shape = {\n    saga: isFunction,\n    mode: mode => isString(mode) && allowedModes.includes(mode),\n  };\n  invariant(\n    conformsTo(descriptor, shape),\n    '(app/utils...) injectSaga: Expected a valid saga descriptor',\n  );\n};\n\nexport function injectSagaFactory(store, isValid) {\n  return function injectSaga(key, descriptor = {}, args) {\n    if (!isValid) checkStore(store);\n\n    const newDescriptor = {\n      ...descriptor,\n      mode: descriptor.mode || DAEMON,\n    };\n    const { saga, mode } = newDescriptor;\n\n    checkKey(key);\n    checkDescriptor(newDescriptor);\n\n    let hasSaga = Reflect.has(store.injectedSagas, key);\n\n    if (process.env.NODE_ENV !== 'production') {\n      const oldDescriptor = store.injectedSagas[key];\n      // enable hot reloading of daemon and once-till-unmount sagas\n      if (hasSaga && oldDescriptor.saga !== saga) {\n        oldDescriptor.task.cancel();\n        hasSaga = false;\n      }\n    }\n\n    if (\n      !hasSaga ||\n      (hasSaga && mode !== DAEMON && mode !== ONCE_TILL_UNMOUNT)\n    ) {\n      /* eslint-disable no-param-reassign */\n      store.injectedSagas[key] = {\n        ...newDescriptor,\n        task: store.runSaga(saga, args),\n      };\n      /* eslint-enable no-param-reassign */\n    }\n  };\n}\n\nexport function ejectSagaFactory(store, isValid) {\n  return function ejectSaga(key) {\n    if (!isValid) checkStore(store);\n\n    checkKey(key);\n\n    if (Reflect.has(store.injectedSagas, key)) {\n      const descriptor = store.injectedSagas[key];\n      if (descriptor.mode && descriptor.mode !== DAEMON) {\n        descriptor.task.cancel();\n        // Clean up in production; in development we need `descriptor.saga` for hot reloading\n        if (process.env.NODE_ENV === 'production') {\n          // Need some value to be able to detect `ONCE_TILL_UNMOUNT` sagas in `injectSaga`\n          store.injectedSagas[key] = 'done'; // eslint-disable-line no-param-reassign\n        }\n      }\n    }\n  };\n}\n\nexport default function getInjectors(store) {\n  checkStore(store);\n\n  return {\n    injectSaga: injectSagaFactory(store, true),\n    ejectSaga: ejectSagaFactory(store, true),\n  };\n}\n","import React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { ReactReduxContext } from 'react-redux';\n\nimport getInjectors from './sagaInjectors';\n\n/**\n * Dynamically injects a saga, passes component's props as saga arguments\n *\n * @param {string} key A key of the saga\n * @param {function} saga A root saga that will be injected\n * @param {string} [mode] By default (constants.DAEMON) the saga will be started\n * on component mount and never canceled or started again. Another two options:\n *   - constants.RESTART_ON_REMOUNT — the saga will be started on component mount and\n *   cancelled with `task.cancel()` on component unmount for improved performance,\n *   - constants.ONCE_TILL_UNMOUNT — behaves like 'RESTART_ON_REMOUNT' but never runs it again.\n *\n */\nexport default ({ key, saga, mode }) => WrappedComponent => {\n  class InjectSaga extends React.Component {\n    static WrappedComponent = WrappedComponent;\n\n    static contextType = ReactReduxContext;\n\n    static displayName = `withSaga(${WrappedComponent.displayName ||\n      WrappedComponent.name ||\n      'Component'})`;\n\n    constructor(props, context) {\n      super(props, context);\n\n      this.injectors = getInjectors(context.store);\n\n      this.injectors.injectSaga(key, { saga, mode }, this.props);\n    }\n\n    componentWillUnmount() {\n      this.injectors.ejectSaga(key);\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  return hoistNonReactStatics(InjectSaga, WrappedComponent);\n};\n\nconst useInjectSaga = ({ key, saga, mode }) => {\n  const context = React.useContext(ReactReduxContext);\n  React.useEffect(() => {\n    const injectors = getInjectors(context.store);\n    injectors.injectSaga(key, { saga, mode });\n\n    return () => {\n      injectors.ejectSaga(key);\n    };\n  }, []);\n};\n\nexport { useInjectSaga };\n","/*\n * HomeConstants\n */\nconst ActionTypes = {\n  SET_CONTENTS: 'ContentListing/setContents',\n  LOAD_CONTENT: 'ContentListing/loadContents',\n};\nexport default ActionTypes;\n","/*\n * ContentListReducer\n *\n * The reducer takes care of our data. Using actions, we can\n * update our application state. To add a new action,\n * add it to the switch statement in the reducer function\n *\n */\n\nimport produce from 'immer';\nimport ActionTypes from './constants';\n\n// The initial state of the App\nexport const initialState = {\n  contents: {},\n};\n\n/* eslint-disable default-case, no-param-reassign */\nconst homeReducer = (state = initialState, action) =>\n  produce(state, draft => {\n    switch (action.type) {\n      case ActionTypes.SET_CONTENTS:\n        draft.contents[action.payload.pageNum] = action.payload.listData;\n        break;\n    }\n  });\n\nexport default homeReducer;\n","const MockAPIService = {\n  fetchContentListMock: pageNo => {\n    let fileName = '';\n    switch (pageNo) {\n      case 1:\n        fileName = 'CONTENTLISTINGPAGE-PAGE1';\n        break;\n      case 2:\n        fileName = 'CONTENTLISTINGPAGE-PAGE2';\n        break;\n      case 3:\n        fileName = 'CONTENTLISTINGPAGE-PAGE3';\n        break;\n      default:\n        break;\n    }\n    if (fileName) {\n      return import(`./${fileName}.json`).then(response => response.page);\n    }\n    return null;\n  },\n};\nexport default MockAPIService;\n","/**\n * Gets the repositories of the user from Github\n */\n\nimport { call, put, takeLatest } from 'redux-saga/effects';\n\nimport MockAPIService from '../api/APIService';\nimport { setContents } from './actions';\nimport ActionTypes from './constants';\n\nexport function* getContents(action) {\n  try {\n    const pageNum = action.payload;\n    const contents = yield call(() =>\n      MockAPIService.fetchContentListMock(pageNum),\n    );\n    if (contents) {\n      const { 'content-items': { content: listData } = {}, ...meta } =\n        contents || {};\n      yield put(setContents({ listData, pageNum, meta }));\n    }\n  } catch (err) {\n    throw err;\n  }\n}\n\n/**\n * Root saga manages watcher lifecycle\n */\nexport default function* loadContent() {\n  // Watches for LOAD_REPOS actions and calls getRepos when one comes in.\n  // By using `takeLatest` only the result of the latest API call is applied.\n  // It returns task descriptor (just like fork) so we can continue execution\n  // It will be cancelled automatically on component unmount\n  yield takeLatest(ActionTypes.LOAD_CONTENT, getContents);\n}\n","/*\n * ContentList -  Actions\n */\n\nimport ActionTypes from './constants';\n\n/**\n * load the contents of the page\n *\n * @param  {object} payload object containing get params\n *\n * @return {object} An action object with a type of LOAD_CONTENT\n */\nexport function loadContents(payload) {\n  return {\n    type: ActionTypes.LOAD_CONTENT,\n    payload,\n  };\n}\n/**\n * sets the contents of the page to redux state\n *\n * @param  {object} payload content data array with its metadata\n *\n * @return {object} An action object with a type of SET_CONTENTS\n */\nexport function setContents(payload) {\n  return {\n    type: ActionTypes.SET_CONTENTS,\n    payload,\n  };\n}\n","/**\n * Homepage selectors\n */\n\nimport { createSelector } from 'reselect';\nimport { initialState } from './reducer';\n\nconst selectContentList = state => state.contentList || initialState;\n\nconst selectContents = () =>\n  createSelector(\n    selectContentList,\n    contentList => contentList.contents,\n  );\n\nexport { selectContentList, selectContents };\n","import { withStyles } from '@material-ui/core/styles';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport withForwardRef from './withForwardRef';\n\nexport default function stylize(component, style) {\n  const Styled = withStyles(style)(component);\n  Styled.displayName = component.displayName || component.name;\n  hoistNonReactStatics(Styled, component);\n  return withForwardRef(Styled);\n}\n","import React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nexport default function withForwardRef(Component) {\n  const forwarded = React.forwardRef((props, ref) => (\n    <Component innerRef={ref} {...props} />\n  ));\n  return hoistNonReactStatics(forwarded, Component);\n}\n","import NavBar from '../images/Slices/nav_bar.png';\nimport BackButton from '../images/Slices/Back.png';\nimport Search from '../images/Slices/search.png';\nexport default function styles() {\n  return {\n    listWrapper: {\n      padding: '15px',\n      display: 'grid',\n      gridTemplateColumns: 'repeat(3, 1fr)',\n      backgroundColor: '#000000',\n    },\n    listItem: {\n      margin: '36px 15px',\n    },\n    imageWrapper: {\n      display: 'flex',\n      justifyContent: 'center',\n      '& img': {\n        width: '100%',\n      },\n    },\n    contentTitle: {\n      margin: '24px 0 18px 0',\n      color: '#ffffff',\n    },\n    navBar: {\n      background: `url(${NavBar})`,\n      height: '40px',\n      padding: '0 15px',\n    },\n    backButton: {\n      background: `url(${BackButton})`,\n      left: 0,\n    },\n    searchButton: {\n      background: `url(${Search})`,\n      right: 0,\n    },\n    navButton: {\n      position: 'absolute',\n      height: '20px',\n      width: '20px',\n      backgroundSize: 'contain',\n      backgroundRepeat: 'no-repeat',\n      border: 0,\n      '& img': {\n        height: '100%',\n      },\n    },\n    navBarItems: {\n      position: 'relative',\n      height: '100%',\n      display: 'flex',\n      alignItems: 'center',\n    },\n    navBarSearchInput: {\n      position: 'relative',\n      width: '70%',\n      left: '40px',\n    },\n  };\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport stylize from '../utils/stylize';\nimport styles from './styles';\n\nfunction NavBar({\n  resetSearchResults,\n  setSearchText,\n  searchText = '',\n  classes,\n}) {\n  const [showInput, setShowInput] = useState(false);\n  const inputElement = useRef();\n  const showSearchInput = () => {\n    setShowInput(true);\n    inputElement.current.focus();\n  };\n  useEffect(() => {\n    if (showInput) {\n      inputElement.current.focus();\n    }\n  }, [showInput]);\n  const moveBack = () => {\n    setShowInput(false);\n    resetSearchResults();\n  };\n  const onChangeInput = event => setSearchText(event.target.value);\n  return (\n    <div className={classes.navBar}>\n      <div className={classes.navBarItems}>\n        <button\n          type=\"button\"\n          className={`${classes.backButton} ${classes.navButton} `}\n          onClick={moveBack}\n        />\n        {showInput && (\n          <input\n            ref={inputElement}\n            className={classes.navBarSearchInput}\n            value={searchText}\n            onChange={onChangeInput}\n          />\n        )}\n        <button\n          type=\"button\"\n          className={`${classes.searchButton} ${classes.navButton} `}\n          onClick={showSearchInput}\n        />\n      </div>\n    </div>\n  );\n}\nNavBar.propTypes = {\n  classes: PropTypes.object,\n  resetSearchResults: PropTypes.func,\n  setSearchText: PropTypes.func,\n  searchText: PropTypes.string,\n};\nexport default stylize(NavBar, styles);\n","/**\n *\n * Img.js\n *\n * Renders an image, enforcing the usage of the alt=\"\" tag\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Img(props) {\n  return <img className={props.className} src={props.src} alt={props.alt} />;\n}\n\n// We require the use of src and alt, only enforced by react in dev mode\nImg.propTypes = {\n  src: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  alt: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n\nexport default Img;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Image from '../components/Img';\nimport AltImage from '../images/Slices/placeholder_for_missing_posters.png';\nimport styles from './styles';\nimport stylize from '../utils/stylize';\n\nfunction ContentItem({ content, classes }) {\n  const { 'poster-image': posterImage, name } = content;\n  useEffect(() => {\n    import(`../images/Slices/${posterImage}`).then(response =>\n      setImageSrc(response.default),\n    );\n  }, [posterImage]);\n  const [imageSrc, setImageSrc] = useState(AltImage);\n  return (\n    <div className={classes.listItem}>\n      <div className={classes.imageWrapper}>\n        <Image src={imageSrc} alt={AltImage} />\n      </div>\n      <div className={classes.contentTitle}>{name}</div>\n    </div>\n  );\n}\nContentItem.propTypes = {\n  content: PropTypes.object,\n  classes: PropTypes.object,\n};\nexport default stylize(ContentItem, styles);\n","/*\n * HomePage\n *\n * This is the first thing users see of our App, at the '/' route\n */\n\nimport React, { useState, useEffect, memo } from 'react';\nimport PropTypes from 'prop-types';\n// import { Helmet } from 'react-helmet';\n// import { FormattedMessage } from 'react-intl';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { useInjectReducer } from '../utils/injectReducer';\nimport { useInjectSaga } from '../utils/injectSaga';\nimport reducer from './reducer';\nimport saga from './saga';\nimport { loadContents } from './actions';\nimport { selectContents } from './selectors';\nimport NavBar from './navBar';\nimport ContentItem from './contentItem';\nimport stylize from '../utils/stylize';\nimport styles from './styles';\n\nconst key = 'contentList';\n\nfunction ContentList({ content, fetchContent, classes }) {\n  useInjectReducer({ key, reducer });\n  useInjectSaga({ key, saga });\n  const [pageNum, setPageNum] = useState(1);\n  const [listData, setListData] = useState([]);\n  const [searchText, setSearchText] = useState('');\n  useEffect(() => {\n    const updatedList = [];\n    Object.keys(content).forEach(pageNo => {\n      updatedList.push(...content[pageNo]);\n    });\n    const filteredList = updatedList.filter(item =>\n      item.name.toLowerCase().includes(searchText.toLowerCase()),\n    );\n    setListData(filteredList);\n  }, [content, searchText]);\n  useEffect(() => {\n    fetchContent(pageNum);\n  }, [fetchContent, pageNum]);\n  // const { [pageNum]: { listData: listItems = [] } = {} } = contents;\n  const fetchData = () => {\n    setPageNum(pageNum + 1);\n  };\n  const resetSearchResults = () => setSearchText('');\n  return (\n    <div>\n      <NavBar\n        searchText={searchText}\n        resetSearchResults={resetSearchResults}\n        setSearchText={setSearchText}\n      />\n      <InfiniteScroll\n        dataLength={listData.length}\n        className={classes.listWrapper}\n        next={fetchData}\n        hasMore\n        loader={<h4>Loading...</h4>}\n        endMessage={\n          <p style={{ textAlign: 'center' }}>\n            <b>Yay! You have seen it all</b>\n          </p>\n        }\n      >\n        {listData.map(item => (\n          <ContentItem content={item} />\n        ))}\n      </InfiniteScroll>\n    </div>\n  );\n}\n\nContentList.propTypes = {\n  content: PropTypes.array,\n  fetchContent: PropTypes.func,\n  classes: PropTypes.object,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  content: selectContents(),\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchContent: payload => dispatch(loadContents(payload)),\n  };\n}\n\nconst withConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n);\n\nexport default stylize(\n  compose(\n    withConnect,\n    memo,\n  )(ContentList),\n  styles,\n);\n","var map = {\n\t\"./CONTENTLISTINGPAGE-PAGE1.json\": [\n\t\t9106,\n\t\t106\n\t],\n\t\"./CONTENTLISTINGPAGE-PAGE2.json\": [\n\t\t964,\n\t\t964\n\t],\n\t\"./CONTENTLISTINGPAGE-PAGE3.json\": [\n\t\t6685,\n\t\t685\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3 | 16);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 7806;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./Back.png\": [\n\t\t4310\n\t],\n\t\"./nav_bar.png\": [\n\t\t6313\n\t],\n\t\"./placeholder_for_missing_posters.png\": [\n\t\t1803\n\t],\n\t\"./poster1.jpg\": [\n\t\t3867,\n\t\t867\n\t],\n\t\"./poster2.jpg\": [\n\t\t4317,\n\t\t317\n\t],\n\t\"./poster3.jpg\": [\n\t\t5851,\n\t\t851\n\t],\n\t\"./poster4.jpg\": [\n\t\t8141,\n\t\t141\n\t],\n\t\"./poster5.jpg\": [\n\t\t7086,\n\t\t86\n\t],\n\t\"./poster6.jpg\": [\n\t\t2619,\n\t\t619\n\t],\n\t\"./poster7.jpg\": [\n\t\t9164,\n\t\t164\n\t],\n\t\"./poster8.jpg\": [\n\t\t2407,\n\t\t407\n\t],\n\t\"./poster9.jpg\": [\n\t\t6002,\n\t\t2\n\t],\n\t\"./search.png\": [\n\t\t8115\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 1 | 16);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 9978;\nmodule.exports = webpackAsyncContext;"],"names":["checkStore","store","shape","dispatch","isFunction","subscribe","getState","replaceReducer","runSaga","injectedReducers","isObject","injectedSagas","invariant","conformsTo","injectReducerFactory","isValid","key","reducer","isString","isEmpty","Reflect","has","createReducer","useInjectReducer","context","React","ReactReduxContext","injectReducer","DAEMON","ONCE_TILL_UNMOUNT","allowedModes","checkKey","checkDescriptor","descriptor","saga","mode","includes","injectSagaFactory","args","newDescriptor","hasSaga","task","ejectSagaFactory","cancel","useInjectSaga","injectors","injectSaga","ejectSaga","SET_CONTENTS","LOAD_CONTENT","initialState","contents","state","action","produce","draft","type","ActionTypes","payload","pageNum","listData","fetchContentListMock","pageNo","fileName","then","response","page","getContents","loadContent","call","MockAPIService","content","meta","put","takeLatest","selectContentList","contentList","stylize","component","style","Styled","withStyles","displayName","name","hoistNonReactStatics","Component","forwarded","props","ref","innerRef","withForwardRef","styles","listWrapper","padding","display","gridTemplateColumns","backgroundColor","listItem","margin","imageWrapper","justifyContent","width","contentTitle","color","navBar","background","NavBar","height","backButton","BackButton","left","searchButton","Search","right","navButton","position","backgroundSize","backgroundRepeat","border","navBarItems","alignItems","navBarSearchInput","resetSearchResults","setSearchText","searchText","classes","useState","showInput","setShowInput","inputElement","useRef","useEffect","current","focus","className","onClick","value","onChange","event","target","src","alt","posterImage","setImageSrc","default","AltImage","imageSrc","mapStateToProps","createStructuredSelector","createSelector","withConnect","connect","fetchContent","loadContents","compose","memo","setPageNum","setListData","updatedList","Object","keys","forEach","push","filteredList","filter","item","toLowerCase","dataLength","length","next","hasMore","loader","endMessage","textAlign","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","e","Error","code","ids","id","t","module","exports","all","slice"],"sourceRoot":""}